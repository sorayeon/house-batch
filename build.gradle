plugins {
    id 'org.springframework.boot' version '2.7.4'
    id 'io.spring.dependency-management' version '1.0.14.RELEASE'
    id 'java'
}

group = 'com.fastcampus'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // spring batch
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    // jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    // database
    runtimeOnly 'org.postgresql:postgresql'
    testRuntimeOnly 'com.h2database:h2'

    // configuration-processor
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok' // 테스트 의존성 추가
    testAnnotationProcessor 'org.projectlombok:lombok' // 테스트 의존성 추가

    // test
    testImplementation 'org.assertj:assertj-core'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.batch:spring-batch-test'

    // xml
    implementation 'org.springframework:spring-oxm'

    // p6spy
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.8.1'

    // querydsl 추가
    implementation 'com.querydsl:querydsl-jpa'
    //implementation 'com.querydsl:querydsl-core'
    //implementation 'com.querydsl:querydsl-collections'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
}

tasks.named('test') {
    useJUnitPlatform()
}

// querydsl 적용
def generated = 'src/main/generated'

// java source set 에 querydsl QClass 위치 추가
sourceSets {
    main.java.srcDirs += [ generated ]
}

// querydsl QClass 파일 위치를 잡아주는 설정
tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
    delete file(generated)
}